// <auto-generated />
using System;
using ItemSales2.Web.Features.SalesOrders.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ItemSales2.Web.Migrations
{
    [DbContext(typeof(SalesOrderContext))]
    [Migration("20250804144932_CustomerPricingMatrix")]
    partial class CustomerPricingMatrix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("SalesOrder")
                .HasAnnotation("ProductVersion", "8.0.18");

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.ContactModel", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CompanyName")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("TEXT");

                    b.Property<string>("GivenName")
                        .HasColumnType("TEXT");

                    b.Property<int>("PricingId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PrimaryNumber")
                        .HasColumnType("TEXT");

                    b.Property<string>("Surname")
                        .HasColumnType("TEXT");

                    b.HasKey("ContactId");

                    b.HasIndex("PricingId");

                    b.ToTable("Contacts", "SalesOrder");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.ItemModel", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Cost")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("Sku")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SupplierId")
                        .HasColumnType("INTEGER");

                    b.HasKey("ItemId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Items", "SalesOrder");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.OrderItemModel", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("ItemId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SalesOrderId")
                        .HasColumnType("INTEGER");

                    b.HasKey("OrderItemId");

                    b.HasIndex("ItemId");

                    b.HasIndex("SalesOrderId");

                    b.ToTable("OrderItems", "SalesOrder");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.PricingMatrixModel", b =>
                {
                    b.Property<int>("PricingMatrixId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("EndPrice")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Markup")
                        .HasColumnType("TEXT");

                    b.Property<int?>("PricingModelPricingId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("StartPrice")
                        .HasColumnType("TEXT");

                    b.HasKey("PricingMatrixId");

                    b.HasIndex("PricingModelPricingId");

                    b.ToTable("PricingMatrix", "SalesOrder");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.PricingModel", b =>
                {
                    b.Property<int>("PricingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("PricingId");

                    b.ToTable("Pricing", "SalesOrder");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.SalesOrderModel", b =>
                {
                    b.Property<int>("SalesOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CustomerId")
                        .HasColumnType("INTEGER");

                    b.HasKey("SalesOrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("SalesOrders", "SalesOrder");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.ContactModel", b =>
                {
                    b.HasOne("ItemSales2.Web.Features.SalesOrders.Models.PricingModel", "Pricing")
                        .WithMany()
                        .HasForeignKey("PricingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pricing");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.ItemModel", b =>
                {
                    b.HasOne("ItemSales2.Web.Features.SalesOrders.Models.ContactModel", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.OrderItemModel", b =>
                {
                    b.HasOne("ItemSales2.Web.Features.SalesOrders.Models.ItemModel", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ItemSales2.Web.Features.SalesOrders.Models.SalesOrderModel", "SalesOrder")
                        .WithMany("Items")
                        .HasForeignKey("SalesOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("SalesOrder");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.PricingMatrixModel", b =>
                {
                    b.HasOne("ItemSales2.Web.Features.SalesOrders.Models.PricingModel", null)
                        .WithMany("Matrix")
                        .HasForeignKey("PricingModelPricingId");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.SalesOrderModel", b =>
                {
                    b.HasOne("ItemSales2.Web.Features.SalesOrders.Models.ContactModel", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.PricingModel", b =>
                {
                    b.Navigation("Matrix");
                });

            modelBuilder.Entity("ItemSales2.Web.Features.SalesOrders.Models.SalesOrderModel", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
